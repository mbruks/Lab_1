write_str([]):-!.
write_str([H|Tail]):-put(H),write_str(Tail).

write_list_str([]):-!.
write_list_str([H|T]):-write_str(H),nl,write_list_str(T).

read_str(A,N,Flag):-get0(X),r_str(X,A,[],N,0,Flag).
r_str(-1,A,A,N,N,1):-!.
r_str(10,A,A,N,N,0):-!.
r_str(X,A,B,N,K,Flag):-K1 is K+1,append(B,[X],B1),get0(X1),r_str(X1,A,B1,N,K1,Flag).

append1([],List2,List2).
append1([H1|T1],List2,[H1|T3]):-append1(T1,List2,T3).

read_list_str(List):-read_str(A,_,Flag),read_list_str([A],List,Flag).
read_list_str(List,List,1):-!.
read_list_str(Cur_list,List,0):-
	read_str(A,_,Flag),append(Cur_list,[A],C_l),read_list_str(C_l,List,Flag).

length_word([],0):-!.
length_word([_|T],L):-length_word(T,L1),L is L1+1.

in_list([El|_],El).
in_list([_|T],El):-in_list(T,El).

reverse(A, Z) :- reverse(A,Z,[]).
reverse([],Z,Z).
reverse([H|T],Z,Acc) :- reverse(T,Z,[H|Acc]).

      %1
number_1:-see('D:/Prolog/input.txt'),read_list_str(List),seen,
	tell('D:/Prolog/output.txt'),number_1(List,0,K),write(K),told.
number_1([],K,K):-!.
number_1([H|T],K,Kol):-length_word(H,L),(L>K -> K1 is L,number_1(T,K1,Kol);number_1(T,K,Kol)).

      %2
number_2:-see('D:/Prolog/input.txt'),read_list_str(List),seen,
	  tell('D:/Prolog/output.txt'),number_2(List,0,Kol),write(Kol),told.

number_2([],K,K):-!.
number_2([H|T],K,Kol):-not(in_list(H,32)),K1 is K+1,number_2(T,K1,Kol),!.
number_2([_|T],K,Kol):-number_2(T,K,Kol),!.

      %3
number_3:-see('D:/Prolog/input.txt'),read_list_str(List),seen,tell('D:/Prolog/output.txt'),
       count_A(List,[],List_Kolvo),average(List_Kolvo,Ave),big_a(List,Ave).

count_A([],List_Kolvo_A,List_Kolvo_A):-!.
count_A([Head|Tail],I,List_Kolvo):-count_A_in_str(Head,0,Kolvo_A),append1(I,[Kolvo_A],I1),count_A(Tail,I1,List_Kolvo).

count_A_in_str([],Kolvo_A,Kolvo_A):-!.
count_A_in_str([Head|Tail],I,Kolvo_A):-(Head is 65->I1 is I+1,count_A_in_str(Tail,I1,Kolvo_A);count_A_in_str(Tail,I,Kolvo_A)).


average(List_Kolvo,Ave):-average(List_Kolvo,0,Sum,0,Num),Ave is Sum / Num.

average([],I_Sum,I_Sum,I_Num,I_Num):-!.
average([Head|Tail],I_Sum,Sum,I_Num,Num):-I1_Sum is I_Sum+Head,I1_Num is I_Num+1,average(Tail,I1_Sum,Sum,I1_Num,Num).

big_a([],_):-!.
big_a([Head|Tail],Ave):-count_A_in_str(Head,0,Kolvo_a),(Kolvo_a>Ave->name(Head1,Head),write(Head1),nl,big_a(Tail,Ave);big_a(Tail,Ave)).

      %4
list_words(A,LW):-append1([32],A,A1),reverse(A1,AR),list_words(AR,[],LW,[]).
list_words([],LW,LW,_):-!.
list_words([H|T],LW,LWN,W):-((H=32;H=10) -> append([W],LW,LW1),list_words(T,LW1,LWN,[]);
						 append1([H],W,W1),list_words(T,LW,LWN,W1)).
list_words_all_file([],ListAllWord,ListAllWord):-!.
list_words_all_file(Stroka,List,ListAllWord):-list_words(Stroka,LW),append1(List,LW,ListAllWord).

kol_repeat_in_list([H|T],X,K):-kol_repeat_in_list([H|T],X,0,K).
kol_repeat_in_list([],_,Kol,Kol):-!.
kol_repeat_in_list([H|T],X,K,Kol):-(H=X -> K1 is K+1,kol_repeat_in_list(T,X,K1,Kol);
									kol_repeat_in_list(T,X,K,Kol)).

number_4:-see('D:/Prolog/input.txt'),read_str(A,_,1),seen,
	  tell('D:/Prolog/output.txt'),list_words_all_file(A,[],ListAllWord),number_4(ListAllWord,_,Word,0,_),write_str(Word),told.

number_4([],Word,Word,Kol,Kol):-!.
number_4([H|T],W,Word,K,Kol):-kol_repeat_in_list([H|T],H,K1),(K1>K -> Kol1 = K1,W1=H,
					    number_4(T,W1,Word,K1,Kol1);number_4(T,W,Word,K,Kol)).

       %1_5
number_1_5:-see('D:/Prolog/input.txt'),read_list_str(List),seen,words_in_all_str(List,[],All_words),not_repeat(All_words,Unique_words),
	  tell('D:/Prolog/output.txt'),noincidence(List,Unique_words),told.

words_in_all_str([],List_frequent,List_frequent):-!.
words_in_all_str([Head|Tail],I,List_frequent):-get_words(Head,Words),append(I,Words,I1),words_in_all_str(Tail,I1,List_frequent).

get_words(A,Words):-get_words(A,[],Words).

get_words([],List_words,List_words):-!.
get_words(Str,Words,List_words):-skip_space(Str,New_Str),get_word(New_Str,Word,New_Str_after_word),
    Word \=[],append(Words,[Word],New_list_word),get_words(New_Str_after_word,New_list_word,List_words),!.
get_words(_,List_words,List_words).

skip_space([32|Tail],New_Str):-skip_space(Tail,New_Str),!.
skip_space(New_Str,New_Str).

get_word([],[],[]):-!.
get_word(Str,Word,New_Str_after_word):-get_word(Str,[],Word,New_Str_after_word).

get_word([],Word,Word,[]).
get_word([32|T],Word,Word,T):-!.
get_word([H|T],W,Word,New_Str_after_word):-append(W,[H],W1),get_word(T,W1,Word,New_Str_after_word).

noincidence([],_):-!.
noincidence([Head|Tail],Unique_words):-(get_words(Head,Words_Head),coin_str(Words_Head,Unique_words)->write_str(Head),nl,noincidence(Tail,Unique_words);noincidence(Tail,Unique_words)).

coin_str([],_):-!.
coin_str([Head|Tail],Unique_words):-m_list(Unique_words,Head),coin_str(Tail,Unique_words).

m_list([El|_],El):-!.
m_list([_|T],El):-m_list(T,El).

del(_,[],[]):-!.
del(Head,[Head|Tail],Res) :- del(Head,Tail,Res),!.
del(Head,[Head1|Tail],[Head1|Res]) :- not(Head = Head1),del(Head,Tail,Res).

not_repeat([],[]):-!.
not_repeat([Head|Tail],[Head|Res]) :- not(m_list(Tail,Head)), not_repeat(Tail,Res),!.
not_repeat([Head|Tail],Res) :- del(Head,Tail,Head1), not_repeat(Head1,Res).

      %2_2
number_2_2:-see('D:/Prolog/input.txt'),read_str(A,_,1),seen,
	tell('D:/Prolog/output.txt'),number_2_2(A),write(A),told.

number_2_2([Head|Tail]):-(Head>=97,Head=<122->number_2_2(Tail,Head);number_2_2(Tail)).
number_2_2([],_):-!.
number_2_2([Head|Tail],Num_Pred_Head):-(Head>=97,Head=<122->(Num_Pred_Head=<Head->number_2_2(Tail,Head);!,fail);number_2_2(Tail,Num_Pred_Head)).

      %2_10
number_2_10:-see('D:/Prolog/input.txt'),read_str(A,_,1),seen,
	tell('D:/Prolog/output.txt'),number_2_10(A,0,K),write(K),told.

number_2_10([],K,K):-!.
number_2_10([H|T],K,Kol):-H=65,K1 is K+1,number_2_10(T,K1,Kol),!.
number_2_10([_|T],K,Kol):-number_2_10(T,K,Kol).

      %2_17
number_2_17:-see('D:/Prolog/input.txt'),read_str(A,_,1),seen,
	tell('D:/Prolog/output.txt'),reverse(A,Ar),to_dot(Ar,Ar_to_dot),before_slash(Ar_to_dot,[],Res),name(Res1,Res),write(Res1),told.

to_dot([46|Tail],Res):-append([],Tail,Res),!.
to_dot([_|Tail],Res):-to_dot(Tail,Res).

before_slash([47|_],Res,Res):-!.
before_slash([Head|Tail],I,Res):-append([Head],I,I1),before_slash(Tail,I1,Res).

     %3
number3:-see('D:/Prolog/input.txt'),read_str(A,_,1),seen,
	tell('D:/Prolog/output.txt'),append(A,[32],A1),date_time(A1),told.

date_time([]):-!.
date_time([32|Tail]):-date_time(Tail),!.
date_time([Head|Tail]):-(day([Head|Tail],[],Day,After_Day)->(month(After_Day,[],Month,After_Month)->(year(After_Month,[],Year,After_Year)->
	name(D,Day),write(D),write(" "),name(M,Month),write(M),write(" "),name(Y,Year),write(Y),nl,date_time(After_Year);date_time(After_Month));
							  date_time(After_Day));date_time(Tail)).
day([32|Tail],Day,Day,Tail):-!.
day([Head|Tail],I,Day,After_Day):-Head >=48,Head =<57,append(I,[Head],I1),day(Tail,I1,Day,After_Day),!.
day([_|_],_,_,_):-!,false.

month([32|Tail],Month,Month,Tail):-!.
month([Head|Tail],I,Month,After_Month):-Head >=97,Head =<122,append(I,[Head],I1),month(Tail,I1,Month,After_Month),!.
month([_|_],_,_,_):-!,false.

year([32|Tail],Year,Year,Tail):-!.
year([Head|Tail],I,Year,After_Year):-Head >=48,Head =<57,append(I,[Head],I1),year(Tail,I1,Year,After_Year),!.
year([_|_],_,_,_):-!,false.

    %4_2
number_4_2:-see('D:/Prolog/input.txt'),read_str(A,_,1),seen,
	tell('D:/Prolog/output.txt'),all_latin(A),told.

all_latin([]):-!.
all_latin([Head|_]):-Head >=97,Head =<122,put(Head),fail.
all_latin([_|Tail]):-all_latin(Tail).

    %4_10
number_4_10:-see('D:/Prolog/input.txt'),read_str(A,_,1),seen,
	tell('D:/Prolog/output.txt'),all_latin(A,[],Latin),not_repeat(Latin,Unique),lenght(Unique,N),write(N),told.

all_latin([],Latin,Latin):-!.
all_latin([Head|Tail],I,Latin):-(Head >=97,Head =<122->append(I,[Head],I1),all_latin(Tail,I1,Latin);all_latin(Tail,I,Latin)).

lenght([],L,L):-!.
lenght([_|Tail],I,L):-I1 is I+1,lenght(Tail,I1,L).
lenght(List,L):-lenght(List,1,L).

       %4_17
number_4_17:-see('D:/Prolog/input.txt'),read_str(A,_,1),seen,
	tell('D:/Prolog/output.txt'),reverse(A,Ar),to_dot(Ar,Ar_to_dot),before_slash(Ar_to_dot,[],Res),name(Res1,Res),write(Res1),told.

      %5

number5:-see('D:/Prolog/input.txt'),read_list_str(A), seen,
	tell('D:/Prolog/output.txt'),list_lenght(A,[],List_Lenght),
	bubble_sort(List_Lenght,_,A,Sorted_A),write_sort(Sorted_A),told.

write_sort([]):-!.
write_sort([Head|Tail]):-name(Head1,Head),write(Head1),nl,write_sort(Tail).

list_lenght([],Res,Res):-!.
list_lenght([Head|Tail],I,Res):-lenght(Head,Lenght_Head),append(I,[Lenght_Head],I1),list_lenght(Tail,I1,Res).

sorted([], [],[],[]):-!.
sorted([Head], [Head],[HeadStr],[HeadStr]):-!.
sorted([First, Second|Tail], [Second|ListWithMaxEnd],[FirstStr, SecondStr|TailStr],[SecondStr|ListWithMaxEndStr]):-First > Second, !,
	sorted([First|Tail], ListWithMaxEnd,[FirstStr|TailStr],ListWithMaxEndStr).
sorted([First, Second|Tail], [First|ListWithMaxEnd],[FirstStr, SecondStr|TailStr], [FirstStr|ListWithMaxEndStr]):-sorted([Second|Tail], ListWithMaxEnd,[SecondStr|TailStr], ListWithMaxEndStr).

bubble_sort(SortedList, SortedList,SortedList_Str,SortedList_Str):-
	sorted(SortedList, DoubleSortedList,SortedList_Str,DoubleSortedList_Str),
	SortedList = DoubleSortedList,SortedList_Str = DoubleSortedList_Str,!.
bubble_sort(List, SortedList,List_Str,SortedList_Str):-sorted(List, SortedPart,List_Str,SortedPart_List_Str),bubble_sort(SortedPart, SortedList,SortedPart_List_Str,SortedList_Str).

    %6

number_6:-see('D:/Prolog/input.txt'),read_list_str(A),seen,
	tell('D:/Prolog/output.txt'),list_word(A,[],List_Word),bubble_sort(List_Word,_,A,Sorted_A),write_sort(Sorted_A),told.

list_word([],Res,Res):-!.
list_word([Head|Tail],I,Res):-get_words(Head,Words),lenght(Words,Count_Words),append(I,[Count_Words],I1),list_word(Tail,I1,Res).

    %7
number_7:-see('D:/Prolog/input.txt'),read_list_str(A), seen,
	tell('D:/Prolog/output.txt'),list_word_after_digit(A,[],List_Word),bubble_sort(List_Word,_,A,Sorted_A),write_sort(Sorted_A),told.

list_word_after_digit([],Res,Res):-!.
list_word_after_digit([Head|Tail],I,Res):-get_words(Head,Words),count_words_after_digit(Words,0,Count_Words),append(I,[Count_Words],I1),list_word_after_digit(Tail,I1,Res).

count_words_after_digit([_],Count_Words,Count_Words):-!.
count_words_after_digit([Head|Tail],I,Count_Words):-kolvo_digit(Head,0,Kolvo_Digit),(Kolvo_Digit>0->I1 is I+1,count_words_after_digit(Tail,I1,Count_Words);count_words_after_digit(Tail,I,Count_Words)).

kolvo_digit([],Kolvo,Kolvo):-!.
kolvo_digit([Head|Tail],I,Kolvo):-Head>=48,Head=<57->I1 is I+1,kolvo_digit(Tail,I1,Kolvo);kolvo_digit(Tail,I,Kolvo).
